=================================================LAVA-BOT DEPLOYMENT GUIDE =============================================================================================== 
+ Step1: Create "Resource Group" in Azure

+ Step2: Login to az via powershell
         >> az login

+ Step3: Set the subscription
       >> az account set --subscription "<azure-subscription-id>"


+ Step4: Create an azure app registration
      >> az ad app create --display-name "lavaBot" --password "@_Sunday50martinsabiodun"

+ Step 5: Navigate to deploymentTemplates/pre-existing-rg-parameters.json and add all information

+ Step6: Navigate to "Deploy via ARM template with existing resource group" >> "Option 2: New App Service Plan"
  az group deployment create --resource-group "LavaResourceGroup" --template-file "template-with-preexisting-rg.json" --parameters appId="aa7161cd-fa3e-4950-98d0-42bb5b0422b7" appSecret="@_Sunday50martinsabiodun" appType="SingleTenant" tenantId="d8a59988-a822-481e-9289-fec881d14394" botId="lavaaaBot" newWebAppName="lavaBotService" newAppServicePlanName="lavaBotServicePlan" appServicePlanLocation="eastus" --name "lavaBotService"


+ Step7: Navigate to .env file and add neccessary configuration

+ Step8: Create web.config file in the root of your project
       >> az bot prepare-deploy --code-dir "." --lang Typescript

+ Step9: Zip up the code manually as "app.zip"

+ Step10: Deploy the zipped code
      >> az webapp deployment source config-zip --resource-group "LavaResourceGroup" --name "lavaBotService" --src "./app.zip"

+ Step11: Navigate to lavaService and restart the service in azure

+ Step12: Navigate to lavaBot and test it

NB: You can get the Tenant ID from "Azure Active Directory"
NB: Never forget to restart the Azure Service after each deployment

==============================================================================================================================================================================


========================================= INTEGRATION ==================================================================================================================
1. Integrate BotFramework with Whatzapp
 >> https://www.youtube.com/watch?v=63EwU2hryrg

2. Integration with Squidex
  >> https://cloud.squidex.io/api/content/dragbot/docs#operation/CreateAppointmentsContent
  >> https://docs.squidex.io/02-documentation/developer-guides/api-overview/api
  >> https://cloud.squidex.io/app/dragbot/settings/clients

======================================================================================================================================================================


